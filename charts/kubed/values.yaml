##
## Kubed chart configuration
##
# Declare variables to be passed into your templates.
replicaCount: 1
kubed:
  registry: appscode
  repository: kubed
  tag: v0.12.0-rc.2
## Optionally specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
## example: helm template charts/kubed \
##            --set imagePullSecrets[0]=abc \
##            --set imagePullSecrets[1]=xyz
imagePullSecrets: []
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent
## Installs Kubed operator as critical addon
## https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
criticalAddon: false
## Log level for kubed
logLevel: 3

## Annotations passed to operator pod(s).
##
annotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Compute resource for the kubed container
## https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
##
resources: {}

securityContext:
  fsGroup: 65535

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

apiserver:
  # If true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.com/Azure/AKS/issues/522 (default true)
  useKubeapiserverFqdnForAks: true
  # healthcheck configures the readiness and liveliness probes for the operator pod.
  healthcheck:
    enabled: false
  servingCerts:
    # If true, generate on install/upgrade the certs that allow the kube-apiserver (and potentially ServiceMonitor) to authenticate vault-operator pods.
    # Otherwise specify in `apiserver.servingCerts.{serverCrt, serverKey}`.
    generate: true
    serverCrt: ""
    serverKey: ""

# Send usage events to Google Analytics
enableAnalytics: true

config:
  # set cluster-name to something meaningful to you, say, prod, prod-us-east, qa, etc.
  # so that you can distinguish notifications sent by kubed
  clusterName: unicorn
  configSourceNamespace: ""
  kubeconfigContent: ""
